{"version":3,"sources":["components/Calculator/Styled/index.js","components/Calculator/index.js","App.js","index.js"],"names":["Container","styled","div","Screen","Previous","Current","Button","button","gridSpan","operation","control","equals","period","Calculator","useState","previous","setPrevious","current","setCurrent","setOperation","appendValue","element","value","target","getAttribute","includes","chooseOperation","compute","result","previousNumber","parseFloat","currentNumber","isNaN","Math","sqrt","onClick","String","slice","data","style","backgroundColor","undefined","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.130b7dc7.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  justify-content: center;\r\n  align-content: center;\r\n  width: 500px;\r\n  margin: 40px auto;\r\n  grid-template-columns: repeat(5, 100px);\r\n  grid-template-rows: minmax(120px, auto) repeat(5, 80px);\r\n  box-shadow: 2px 2px 10px #333;\r\n  border-radius: 10px;\r\n`;\r\nexport const Screen = styled.div`\r\n  grid-column: 1 / -1;\r\n  background-color: rgba(60, 64, 67, 0.75);\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n  text-align: right;\r\n  border-top-left-radius: 10px;\r\n  border-top-right-radius: 10px;\r\n`;\r\nexport const Previous = styled.div`\r\n  color: rgba(255, 255, 255, 0.75);\r\n  font-size: 1.5rem;\r\n`;\r\nexport const Current = styled.div`\r\n  color: white;\r\n  font-size: 2.5rem;\r\n`;\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  font-size: 2rem;\r\n  border: 1px outset white;\r\n  outline: none;\r\n  background-color: rgbargb(245, 245, 245, 0.75);\r\n  &:hover {\r\n    background-color: rgba(255, 255, 255, 0.9);\r\n  }\r\n  /* EXPANDED FORM EXAMPLE */\r\n  ${function ({ gridSpan }) {\r\n    if (gridSpan) {\r\n      return `grid-column: span ${gridSpan};`;\r\n    }\r\n  }}\r\n  ${({ gridSpan }) => gridSpan && `grid-column: span ${gridSpan};`}\r\n    ${({ operation }) => operation && `background-color: gray;`}\r\n    ${({ control }) => control && `background-color: skyblue;`}\r\n    ${({ equals }) =>\r\n    equals && `border-bottom-right-radius: 10px; background-color: gray;`}\r\n    ${({ period }) =>\r\n    period && `border-bottom-left-radius: 10px; background-color: skyblue;`}\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { Container, Screen, Previous, Current, Button } from \"./Styled\";\r\n\r\nexport default function Calculator() {\r\n  const [previous, setPrevious] = useState(\"\");\r\n  const [current, setCurrent] = useState(\"\");\r\n  const [operation, setOperation] = useState(\"\");\r\n\r\n  const appendValue = (element) => {\r\n    const value = element.target.getAttribute(\"data\");\r\n\r\n    if (value === \".\" && current.includes(\".\")) return;\r\n    setCurrent(current + value);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    setCurrent(String(current).slice(0, -1));\r\n  };\r\n\r\n  const handleAllClear = () => {\r\n    setCurrent(\"\");\r\n    setPrevious(\"\");\r\n    setOperation(\"\");\r\n  };\r\n\r\n  const chooseOperation = (element) => {\r\n    if (current === \"\") return;\r\n    if (previous !== \"\" && previous === \"√\") {\r\n      let value = compute();\r\n      setPrevious(value);\r\n    } else {\r\n      setPrevious(current);\r\n    }\r\n\r\n    setCurrent(\"\");\r\n    setOperation(element.target.getAttribute(\"data\"));\r\n  };\r\n\r\n  const equals = () => {\r\n    let value = compute();\r\n    if (value === undefined || value == null) return;\r\n\r\n    setCurrent(value);\r\n    setPrevious(\"\");\r\n    setOperation(\"\");\r\n  };\r\n\r\n  const compute = () => {\r\n    let result;\r\n    let previousNumber = parseFloat(previous);\r\n    let currentNumber = parseFloat(current);\r\n\r\n    if (isNaN(previousNumber) || isNaN(currentNumber)) return;\r\n\r\n    switch (operation) {\r\n      case \"÷\":\r\n        result = previousNumber / currentNumber;\r\n        break;\r\n      case \"×\":\r\n        result = previousNumber * currentNumber;\r\n        break;\r\n      case \"+\":\r\n        result = previousNumber + currentNumber;\r\n        break;\r\n      case \"-\":\r\n        result = previousNumber - currentNumber;\r\n        break;\r\n      case \"%\":\r\n        result = previousNumber % currentNumber;\r\n        break;\r\n      case \"√\":\r\n        result = Math.sqrt(previousNumber);\r\n        break;\r\n      case \"^\":\r\n        result = previousNumber * previousNumber;\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Screen>\r\n        <Previous>\r\n          {previous} {operation}\r\n        </Previous>\r\n        <Current>{current}</Current>\r\n      </Screen>\r\n      <Button onClick={handleAllClear} gridSpan={2} control>\r\n        AC\r\n      </Button>\r\n      <Button onClick={handleDelete} control>\r\n        Del\r\n      </Button>\r\n      <Button data={\"÷\"} onClick={chooseOperation} operation>\r\n        ÷\r\n      </Button>\r\n      <Button data={\"×\"} onClick={chooseOperation} operation>\r\n        ×\r\n      </Button>\r\n      <Button data={\"7\"} onClick={appendValue}>\r\n        7\r\n      </Button>\r\n      <Button data={\"8\"} onClick={appendValue}>\r\n        8\r\n      </Button>\r\n      <Button data={\"9\"} onClick={appendValue}>\r\n        9\r\n      </Button>\r\n      <Button data={\"+\"} onClick={chooseOperation} operation>\r\n        +\r\n      </Button>\r\n      <Button data={\"-\"} onClick={chooseOperation} operation>\r\n        -\r\n      </Button>\r\n\r\n      <Button data={\"4\"} onClick={appendValue}>\r\n        4\r\n      </Button>\r\n      <Button data={\"5\"} onClick={appendValue}>\r\n        5\r\n      </Button>\r\n      <Button data={\"6\"} onClick={appendValue}>\r\n        6\r\n      </Button>\r\n      <Button data={\"%\"} onClick={chooseOperation} operation>\r\n        %\r\n      </Button>\r\n      <Button data={\"√\"} onClick={chooseOperation} operation>\r\n        √\r\n      </Button>\r\n      <Button data={\"1\"} onClick={appendValue}>\r\n        1\r\n      </Button>\r\n      <Button data={\"2\"} onClick={appendValue}>\r\n        2\r\n      </Button>\r\n      <Button data={\"3\"} onClick={appendValue}>\r\n        3\r\n      </Button>\r\n      <Button\r\n        gridSpan={2}\r\n        data={\"^\"}\r\n        onClick={chooseOperation}\r\n        style={{ backgroundColor: \"grey\" }}\r\n      >\r\n        ^\r\n      </Button>\r\n      <Button gridSpan={2} data={\"0\"} period onClick={appendValue}>\r\n        0\r\n      </Button>\r\n      <Button data={\".\"} period onClick={appendValue}>\r\n        .\r\n      </Button>\r\n      <Button gridSpan={2} onClick={equals} equals>\r\n        =\r\n      </Button>\r\n    </Container>\r\n  );\r\n}\r\n","import Calculator from \"./components/Calculator\";\n\nfunction App() {\n  return <Calculator />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}